{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst blockContainer = document.querySelector('.timer');\nconst inputFormEl = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nlet userSelectDate;\nstartBtn.disabled = true;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      startBtn.disabled = true;\n      return iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    }\n\n    startBtn.disabled = false;\n    userSelectDate = selectedDates[0];\n  },\n};\n\nflatpickr(inputFormEl, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener('click', () => {\n  const intervalId = setInterval(() => {\n    const diff = userSelectDate - Date.now();\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      return iziToast.success({\n        title: 'Countdown Finished',\n        message: 'Timer has ended!',\n        position: 'topRight',\n      });\n    }\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    blockContainer.querySelector('.js-days').textContent = addZero(days);\n    blockContainer.querySelector('.js-hours').textContent = addZero(hours);\n    blockContainer.querySelector('.js-minutes').textContent = addZero(minutes);\n    blockContainer.querySelector('.js-seconds').textContent = addZero(seconds);\n    function addZero(value) {\n      return String(value).padStart(2, '0');\n    }\n  }, 1000);\n  startBtn.disabled = true;\n  inputFormEl.disabled = true;\n});\n"],"names":["blockContainer","inputFormEl","startBtn","userSelectDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","intervalId","diff","addZero","value"],"mappings":"iyBAIA,MAAMA,EAAiB,SAAS,cAAc,QAAQ,EAChDC,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAW,SAAS,cAAc,cAAc,EACtD,IAAIC,EACJD,EAAS,SAAW,GACpB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,GADA,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAI,IAAI,KACzB,OAAAH,EAAS,SAAW,GACbI,EAAS,MAAM,CACpB,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EAGHJ,EAAS,SAAW,GACpBC,EAAiBE,EAAc,CAAC,CACjC,CACH,EAEAE,EAAUN,EAAaG,CAAO,EAE9B,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAX,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAMY,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOZ,EAAiB,KAAK,IAAG,EACtC,GAAIY,GAAQ,EACV,qBAAcD,CAAU,EACjBR,EAAS,QAAQ,CACtB,MAAO,qBACP,QAAS,mBACT,SAAU,UAClB,CAAO,EAEH,KAAM,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAI,EACxDf,EAAe,cAAc,UAAU,EAAE,YAAcgB,EAAQN,CAAI,EACnEV,EAAe,cAAc,WAAW,EAAE,YAAcgB,EAAQL,CAAK,EACrEX,EAAe,cAAc,aAAa,EAAE,YAAcgB,EAAQJ,CAAO,EACzEZ,EAAe,cAAc,aAAa,EAAE,YAAcgB,EAAQH,CAAO,EACzE,SAASG,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CACF,EAAE,GAAI,EACPf,EAAS,SAAW,GACpBD,EAAY,SAAW,EACzB,CAAC"}